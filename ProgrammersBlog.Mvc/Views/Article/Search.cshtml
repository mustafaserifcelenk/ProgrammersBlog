@using System.Text.RegularExpressions;
@model ProgrammersBlog.Mvc.Models.ArticleSearchViewModel
@{
    ViewBag.Title = "Anasayfa";
    Layout = "_Layout";
    Regex regex = new Regex("<[^>]*>");
}
<div id="content">
    <div class="inner">
        <form>
            <div class="row">
                <input type="hidden" id="category-id" value="@(Model.ArticleListDto.CategoryId!=null?Model.ArticleListDto.CategoryId.Value:null)" />
                <input type="hidden" id="current-page" value="@Model.ArticleListDto.CurrentPage" />
                <div class="form-group col-md-6">
                    <select class="form-control" id="select-page-size">
                        <option selected="@(Model.ArticleListDto.PageSize == 5 ? "selected" : null)" value="5">5</option>
                        <option selected="@(Model.ArticleListDto.PageSize == 10 ? "selected" : null)" value="10">10</option>
                        <option selected="@(Model.ArticleListDto.PageSize == 20 ? "selected" : null)" value="20">20</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <select class="form-control" id="select-is-ascending">
                        <option selected="@(Model.ArticleListDto.IsAscending == false ? "selected" : null)" value="false">En Yeni</option>
                        <option selected="@(Model.ArticleListDto.IsAscending ? "selected" : null)" value="true">En Eski</option>
                    </select>
                </div>
            </div>
        </form>

        @foreach (var article in Model.ArticleListDto.Articles)
        {
            <!-- Post -->
            <article class="box post post-excerpt">
                <header>
                    <!--
                        Note: Titles and subtitles will wrap automatically when necessary, so don't worry
                        if they get too long. You can also remove the <p> entirely if you don't
                        need a subtitle.
                    -->
                    <h2><a href="#">@article.Title</a></h2>
                    <p>@article.SeoDescription</p>
                </header>
                <div class="info">
                    <!--
                        Note: The date should be formatted exactly as it's shown below. In particular, the
                        "least significant" characters of the month should be encapsulated in a <span>
                        element to denote what gets dropped in 1200px mode (eg. the "uary" in "January").
                        Oh, and if you don't need a date for a particular page or post you can simply delete
                        the entire "date" element.

                    -->
                    <span class="date"><span class="month">@(article.Date.Month.ToString().Length>3 ? article.Date.Month.ToString().Substring(3) : article.Date.Month.ToString())<span>y</span></span> <span class="day">@article.Date.Day</span><span class="year">, @article.Date.Year</span></span>
                    <!--
                        Note: You can change the number of list items in "stats" to whatever you want.
                    -->
                    <ul class="stats">
                        <li><a href="#" class="icon fa-comment">16</a></li>
                        <li><a href="#" class="icon fa-heart">32</a></li>
                        <li><a href="#" class="icon brands fa-twitter">64</a></li>
                        <li><a href="#" class="icon brands fa-facebook-f">128</a></li>
                    </ul>
                </div>
                <a href="#" class="image featured"><img src="~/img/@article.Thumbnail" alt="@article.Title" /></a>
                <p>
                    @{
                        article.Content = regex.Replace(article.Content, "");
                    }
                    @(article.Content.Length>150 ? article.Content.Substring(150) : article.Content)
                </p>
                <a asp-controller="Article" asp-action="Detail" asp-route-articleId="@article.Id">Sesi aç...</a>
            </article>
        }

        <!-- Pagination -->
        <div class="pagination">
            @{
                @if (Model.ArticleListDto.ShowPrevious)
                {
                        <a class="button previous" asp-route-isAscending="@Model.ArticleListDto.IsAscending" asp-route-pageSize="@Model.ArticleListDto.PageSize" asp-route-currentPage="@(Model.ArticleListDto.CurrentPage-1)" asp-route-keyword="@Model.Keyword">Önceki</a>
                    }
                <div class="pages">

                    @for (var i = 1; i <= Model.ArticleListDto.TotalPages; i++)
                    {

                            <a class="@(i == Model.ArticleListDto.CurrentPage ? "active" : "")" asp-route-currentPage="@i" asp-route-isAscending="@Model.ArticleListDto.IsAscending" asp-route-pageSize="@Model.ArticleListDto.PageSize" asp-route-keyword="@Model.Keyword">@i</a>
                    }
                </div>
                @if (Model.ArticleListDto.ShowNext)
                {
                        <a class="button next" asp-route-isAscending="@Model.ArticleListDto.IsAscending" asp-route-pageSize="@Model.ArticleListDto.PageSize" asp-route-currentPage="@(Model.ArticleListDto.CurrentPage+1)" asp-route-keyword="@Model.Keyword">Sonraki</a>
                    
                }
            }
            <div class="pages"></div>

        </div>

    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {

            $(function () {

                const selectPageSize = $('#select-page-size');
                const selectIsAscending = $('#select-is-ascending');
                const keyword = $('#keyword').val();
                const currentPage = $('#current-page').val();
                const keywordQuery = keyword !== null ? `&keyword=${keyword}` : null;

                selectPageSize.on('change',
                    function () {
                        window.location =
                            `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${keywordQuery != null ? keywordQuery : null}&currentPage=${currentPage}`;
                    });
                selectIsAscending.on('change',
                    function () {
                        window.location =
                            `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${keywordQuery != null ? keywordQuery : null}&currentPage=${currentPage}`;
                    });
            });
        });
    </script>
}